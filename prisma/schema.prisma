generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id          Int         @id @default(autoincrement())
    phone       String      @unique
    orderId     String      @unique
    password    String?
    folders     Folder[]
    files       File[]
    role        UserRole    @default(USER)
    comment     String?
    verified    Boolean     @default(false)
    loginLogs   LoginLog[]

    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
}


model Folder {
    id          Int       @id @default(autoincrement())

    name        String
    
    userId      Int
    user        User      @relation(fields: [userId], references: [id])

    parentId    Int?      
    parent      Folder?   @relation("FolderParent", fields: [parentId], references: [id])
    children    Folder[]  @relation("FolderParent")

    files       File[]

    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
}


model File {
    id          Int       @id @default(autoincrement())

    name        String
    path        String
    size        Int

    owner       User      @relation(fields: [userId], references: [id])
    userId      Int

    folderId    Int?      
    folder      Folder?   @relation(fields: [folderId], references: [id])

    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
}

model VerificationCode {
  id            Int      @id @default(autoincrement())
  phone         String
  code          String
  expiresAt     DateTime
}

model LoginLog {
    id          Int       @id @default(autoincrement())
    userId      Int
    user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    loggedInAt  DateTime  @default(now())
}




enum UserRole{
    USER
    ADMIN
}